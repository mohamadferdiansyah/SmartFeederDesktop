import 'package:get/get.dart';
import 'package:smart_feeder_desktop/app/models/halter_device_model.dart';
import 'package:smart_feeder_desktop/app/models/horse_health_model.dart';
import 'package:smart_feeder_desktop/app/models/horse_model.dart';
import 'package:smart_feeder_desktop/app/models/room_model.dart';
import 'package:smart_feeder_desktop/app/models/stable_model.dart';

class HalterDashboardController extends GetxController {
  RxInt selectedStableIndex = 0.obs;
  RxString selectedStableId = 'S1'.obs;
  RxInt selectedRoomIndex = 0.obs;
  RoomModel get selectedRoom => filteredRoomList.isNotEmpty
      ? filteredRoomList[selectedRoomIndex.value.clamp(
          0,
          filteredRoomList.length - 1,
        )]
      : roomList[0];
  List<RoomModel> get filteredRoomList => roomList
      .where((room) => room.stableId == selectedStableId.value)
      .toList();

  final RxList<StableModel> stableList = <StableModel>[
    StableModel(
      stableId: 'S1',
      name: 'Kandang Alpha',
      address: 'Jl. Kuda No.1',
    ),
    StableModel(
      stableId: 'S2',
      name: 'Kandang Bravo',
      address: 'Jl. Kuda No.2',
    ),
    StableModel(
      stableId: 'S3',
      name: 'Kandang Charlie',
      address: 'Jl. Kuda No.3',
    ),
  ].obs;

  final RxList<HorseModel> horseList = <HorseModel>[
    // Stable 1
    HorseModel(
      horseId: 'H1',
      name: 'Farel',
      type: 'local',
      gender: 'male',
      age: '1,47 tahun',
      roomId: 'R1',
    ),
    HorseModel(
      horseId: 'H2',
      name: 'Bella',
      type: 'crossbred',
      gender: 'female',
      age: '2,15 tahun',
      roomId: 'R2',
    ),
    HorseModel(
      horseId: 'H3',
      name: 'Jupiter',
      type: 'local',
      gender: 'male',
      age: '3,05 tahun',
      roomId: 'R3',
    ),
    HorseModel(
      horseId: 'H4',
      name: 'Mawar',
      type: 'crossbred',
      gender: 'female',
      age: '1,98 tahun',
      roomId: 'R4',
    ),
    HorseModel(
      horseId: 'H5',
      name: 'Tornado',
      type: 'local',
      gender: 'male',
      age: '2,80 tahun',
      roomId: 'R5',
    ),
    HorseModel(
      horseId: 'H6',
      name: 'Dewi',
      type: 'crossbred',
      gender: 'female',
      age: '2,60 tahun',
      roomId: 'R6',
    ),
    // Stable 2
    HorseModel(
      horseId: 'H7',
      name: 'Raja',
      type: 'local',
      gender: 'male',
      age: '3,40 tahun',
      roomId: 'R7',
    ),
    HorseModel(
      horseId: 'H8',
      name: 'Putri',
      type: 'crossbred',
      gender: 'female',
      age: '1,80 tahun',
      roomId: 'R8',
    ),
    HorseModel(
      horseId: 'H9',
      name: 'Guntur',
      type: 'local',
      gender: 'male',
      age: '2,50 tahun',
      roomId: 'R9',
    ),
    HorseModel(
      horseId: 'H10',
      name: 'Bunga',
      type: 'crossbred',
      gender: 'female',
      age: '2,10 tahun',
      roomId: 'R10',
    ),
    HorseModel(
      horseId: 'H11',
      name: 'Bintang',
      type: 'local',
      gender: 'male',
      age: '4,00 tahun',
      roomId: 'R11',
    ),
    HorseModel(
      horseId: 'H12',
      name: 'Melati',
      type: 'crossbred',
      gender: 'female',
      age: '3,20 tahun',
      roomId: 'R12',
    ),
    // Stable 3
    HorseModel(
      horseId: 'H13',
      name: 'Satria',
      type: 'local',
      gender: 'male',
      age: '2,70 tahun',
      roomId: 'R13',
    ),
    HorseModel(
      horseId: 'H14',
      name: 'Citra',
      type: 'crossbred',
      gender: 'female',
      age: '1,60 tahun',
      roomId: 'R14',
    ),
    HorseModel(
      horseId: 'H15',
      name: 'Mega',
      type: 'local',
      gender: 'male',
      age: '3,90 tahun',
      roomId: 'R15',
    ),
    HorseModel(
      horseId: 'H16',
      name: 'Embun',
      type: 'crossbred',
      gender: 'female',
      age: '2,00 tahun',
      roomId: 'R16',
    ),
    HorseModel(
      horseId: 'H17',
      name: 'Petir',
      type: 'local',
      gender: 'male',
      age: '2,30 tahun',
      roomId: 'R17',
    ),
    HorseModel(
      horseId: 'H18',
      name: 'Indah',
      type: 'crossbred',
      gender: 'female',
      age: '2,45 tahun',
      roomId: 'R18',
    ),
  ].obs;

  final RxList<RoomModel> roomList = <RoomModel>[
    // Stable 1
    RoomModel(
      roomId: 'R1',
      name: 'Ruangan 1',
      deviceSerial: 'SRIPB1223001',
      status: 'used',
      cctvIds: ['CCTV1', 'CCTV2'],
      stableId: 'S1',
      horseId: 'H1',
      remainingWater: 43.0,
      remainingFeed: 30.0,
      scheduleType: 'penjadwalan',
    ),
    RoomModel(
      roomId: 'R2',
      name: 'Ruangan 2',
      deviceSerial: 'SRIPB1223002',
      status: 'available',
      cctvIds: ['CCTV3', 'CCTV4'],
      stableId: 'S1',
      horseId: 'H2',
      remainingWater: 21.0,
      remainingFeed: 15.0,
      scheduleType: 'otomatis',
    ),
    RoomModel(
      roomId: 'R3',
      name: 'Ruangan 3',
      deviceSerial: 'SRIPB1223003',
      status: 'used',
      cctvIds: ['CCTV5', 'CCTV6'],
      stableId: 'S1',
      horseId: 'H3',
      remainingWater: 11.0,
      remainingFeed: 12.0,
      scheduleType: 'manual',
    ),
    RoomModel(
      roomId: 'R4',
      name: 'Ruangan 4',
      deviceSerial: 'SRIPB1223004',
      status: 'available',
      cctvIds: ['CCTV7', 'CCTV8'],
      stableId: 'S1',
      horseId: 'H4',
      remainingWater: 50.0,
      remainingFeed: 17.0,
      scheduleType: 'penjadwalan',
    ),
    RoomModel(
      roomId: 'R5',
      name: 'Ruangan 5',
      deviceSerial: 'SRIPB1223005',
      status: 'used',
      cctvIds: ['CCTV9', 'CCTV10'],
      stableId: 'S1',
      horseId: 'H5',
      remainingWater: 18.0,
      remainingFeed: 21.0,
      scheduleType: 'otomatis',
    ),
    RoomModel(
      roomId: 'R6',
      name: 'Ruangan 6',
      deviceSerial: 'SRIPB1223006',
      status: 'available',
      cctvIds: ['CCTV11', 'CCTV12'],
      stableId: 'S1',
      horseId: 'H6',
      remainingWater: 26.0,
      remainingFeed: 7.0,
      scheduleType: 'manual',
    ),
    // Stable 2
    RoomModel(
      roomId: 'R7',
      name: 'Ruangan 7',
      deviceSerial: 'SRIPB1223007',
      status: 'used',
      cctvIds: ['CCTV13', 'CCTV14'],
      stableId: 'S2',
      horseId: 'H7',
      remainingWater: 10.0,
      remainingFeed: 13.0,
      scheduleType: 'penjadwalan',
    ),
    RoomModel(
      roomId: 'R8',
      name: 'Ruangan 8',
      deviceSerial: 'SRIPB1223008',
      status: 'available',
      cctvIds: ['CCTV15', 'CCTV16'],
      stableId: 'S2',
      horseId: 'H8',
      remainingWater: 9.0,
      remainingFeed: 6.5,
      scheduleType: 'otomatis',
    ),
    RoomModel(
      roomId: 'R9',
      name: 'Ruangan 9',
      deviceSerial: 'SRIPB1223009',
      status: 'used',
      cctvIds: ['CCTV17', 'CCTV18'],
      stableId: 'S2',
      horseId: 'H9',
      remainingWater: 31.0,
      remainingFeed: 22.0,
      scheduleType: 'manual',
    ),
    RoomModel(
      roomId: 'R10',
      name: 'Ruangan 10',
      deviceSerial: 'SRIPB1223010',
      status: 'available',
      cctvIds: ['CCTV19', 'CCTV20'],
      stableId: 'S2',
      horseId: 'H10',
      remainingWater: 23.0,
      remainingFeed: 20.0,
      scheduleType: 'penjadwalan',
    ),
    RoomModel(
      roomId: 'R11',
      name: 'Ruangan 11',
      deviceSerial: 'SRIPB1223011',
      status: 'used',
      cctvIds: ['CCTV2', 'CCTV3'],
      stableId: 'S2',
      horseId: 'H11',
      remainingWater: 11.0,
      remainingFeed: 16.0,
      scheduleType: 'otomatis',
    ),
    RoomModel(
      roomId: 'R12',
      name: 'Ruangan 12',
      deviceSerial: 'SRIPB1223012',
      status: 'available',
      cctvIds: ['CCTV4', 'CCTV5'],
      stableId: 'S2',
      horseId: 'H12',
      remainingWater: 41.0,
      remainingFeed: 19.0,
      scheduleType: 'manual',
    ),
    // Stable 3
    RoomModel(
      roomId: 'R13',
      name: 'Ruangan 13',
      deviceSerial: 'SRIPB1223013',
      status: 'used',
      cctvIds: ['CCTV6', 'CCTV7'],
      stableId: 'S3',
      horseId: 'H13',
      remainingWater: 36.0,
      remainingFeed: 3.0,
      scheduleType: 'penjadwalan',
    ),
    RoomModel(
      roomId: 'R14',
      name: 'Ruangan 14',
      deviceSerial: 'SRIPB1223014',
      status: 'available',
      cctvIds: ['CCTV8', 'CCTV9'],
      stableId: 'S3',
      horseId: 'H14',
      remainingWater: 24.0,
      remainingFeed: 10.0,
      scheduleType: 'otomatis',
    ),
    RoomModel(
      roomId: 'R15',
      name: 'Ruangan 15',
      deviceSerial: 'SRIPB1223015',
      status: 'used',
      cctvIds: ['CCTV10', 'CCTV11'],
      stableId: 'S3',
      horseId: 'H15',
      remainingWater: 14.5,
      remainingFeed: 24.0,
      scheduleType: 'manual',
    ),
    RoomModel(
      roomId: 'R16',
      name: 'Ruangan 16',
      deviceSerial: 'SRIPB1223016',
      status: 'available',
      cctvIds: ['CCTV12', 'CCTV13'],
      stableId: 'S3',
      horseId: 'H16',
      remainingWater: 7.0,
      remainingFeed: 16.0,
      scheduleType: 'penjadwalan',
    ),
    RoomModel(
      roomId: 'R17',
      name: 'Ruangan 17',
      deviceSerial: 'SRIPB1223017',
      status: 'used',
      cctvIds: ['CCTV14', 'CCTV15'],
      stableId: 'S3',
      horseId: 'H17',
      remainingWater: 6.0,
      remainingFeed: 2.0,
      scheduleType: 'otomatis',
    ),
    RoomModel(
      roomId: 'R18',
      name: 'Ruangan 18',
      deviceSerial: 'SRIPB1223018',
      status: 'available',
      cctvIds: ['CCTV16', 'CCTV17'],
      stableId: 'S3',
      horseId: 'H18',
      remainingWater: 39.0,
      remainingFeed: 11.0,
      scheduleType: 'manual',
    ),
  ].obs;

  final RxList<HorseHealthModel> horseHealthList = <HorseHealthModel>[
    HorseHealthModel(
      healthId: 'HEALTH1',
      horseId: 'H1',
      heartRate: 38,
      bodyTemp: 37.2,
      oxygen: 98.5,
      respiration: 18,
      posture: "Berdiri Kepala Tegak",
      postureAccuracy: 98.0,
      batteryPercent: 90,
    ),
    HorseHealthModel(
      healthId: 'HEALTH2',
      horseId: 'H2',
      heartRate: 41,
      bodyTemp: 38.0,
      oxygen: 97.2,
      respiration: 17,
      posture: "Tidur",
      postureAccuracy: 94.2,
      batteryPercent: 80,
    ),
    HorseHealthModel(
      healthId: 'HEALTH3',
      horseId: 'H3',
      heartRate: 36,
      bodyTemp: 37.9,
      oxygen: 98.8,
      respiration: 19,
      posture: "Berdiri Kepala Tegak",
      postureAccuracy: 96.8,
      batteryPercent: 85,
    ),
    HorseHealthModel(
      healthId: 'HEALTH4',
      horseId: 'H4',
      heartRate: 39,
      bodyTemp: 37.1,
      oxygen: 99.2,
      respiration: 16,
      posture: "Tidur",
      postureAccuracy: 92.3,
      batteryPercent: 78,
    ),
    HorseHealthModel(
      healthId: 'HEALTH5',
      horseId: 'H5',
      heartRate: 37,
      bodyTemp: 36.8,
      oxygen: 95.8,
      respiration: 20,
      posture: "Berdiri Kepala Tegak",
      postureAccuracy: 99.0,
      batteryPercent: 95,
    ),
    HorseHealthModel(
      healthId: 'HEALTH6',
      horseId: 'H6',
      heartRate: 42,
      bodyTemp: 37.5,
      oxygen: 97.5,
      respiration: 15,
      posture: "Tidur",
      postureAccuracy: 98.5,
      batteryPercent: 77,
    ),
    HorseHealthModel(
      healthId: 'HEALTH7',
      horseId: 'H7',
      heartRate: 35,
      bodyTemp: 37.6,
      oxygen: 98.1,
      respiration: 20,
      posture: "Berdiri Kepala Tegak",
      postureAccuracy: 97.8,
      batteryPercent: 89,
    ),
    HorseHealthModel(
      healthId: 'HEALTH8',
      horseId: 'H8',
      heartRate: 44,
      bodyTemp: 39.0,
      oxygen: 98.2,
      respiration: 18,
      posture: "Tidur",
      postureAccuracy: 95.7,
      batteryPercent: 64,
    ),
    HorseHealthModel(
      healthId: 'HEALTH9',
      horseId: 'H9',
      heartRate: 40,
      bodyTemp: 36.9,
      oxygen: 96.7,
      respiration: 19,
      posture: "Berdiri Kepala Tegak",
      postureAccuracy: 98.3,
      batteryPercent: 91,
    ),
    HorseHealthModel(
      healthId: 'HEALTH10',
      horseId: 'H10',
      heartRate: 38,
      bodyTemp: 37.8,
      oxygen: 99.1,
      respiration: 16,
      posture: "Tidur",
      postureAccuracy: 92.8,
      batteryPercent: 75,
    ),
    HorseHealthModel(
      healthId: 'HEALTH11',
      horseId: 'H11',
      heartRate: 36,
      bodyTemp: 37.4,
      oxygen: 98.0,
      respiration: 18,
      posture: "Berdiri Kepala Tegak",
      postureAccuracy: 97.9,
      batteryPercent: 82,
    ),
    HorseHealthModel(
      healthId: 'HEALTH12',
      horseId: 'H12',
      heartRate: 41,
      bodyTemp: 38.5,
      oxygen: 97.9,
      respiration: 20,
      posture: "Tidur",
      postureAccuracy: 93.4,
      batteryPercent: 83,
    ),
    HorseHealthModel(
      healthId: 'HEALTH13',
      horseId: 'H13',
      heartRate: 39,
      bodyTemp: 36.7,
      oxygen: 97.3,
      respiration: 17,
      posture: "Berdiri Kepala Tegak",
      postureAccuracy: 98.1,
      batteryPercent: 88,
    ),
    HorseHealthModel(
      healthId: 'HEALTH14',
      horseId: 'H14',
      heartRate: 43,
      bodyTemp: 38.2,
      oxygen: 98.6,
      respiration: 19,
      posture: "Tidur",
      postureAccuracy: 92.2,
      batteryPercent: 79,
    ),
    HorseHealthModel(
      healthId: 'HEALTH15',
      horseId: 'H15',
      heartRate: 40,
      bodyTemp: 37.5,
      oxygen: 99.0,
      respiration: 20,
      posture: "Berdiri Kepala Tegak",
      postureAccuracy: 99.8,
      batteryPercent: 97,
    ),
    HorseHealthModel(
      healthId: 'HEALTH16',
      horseId: 'H16',
      heartRate: 38,
      bodyTemp: 36.9,
      oxygen: 95.9,
      respiration: 15,
      posture: "Tidur",
      postureAccuracy: 97.4,
      batteryPercent: 74,
    ),
    HorseHealthModel(
      healthId: 'HEALTH17',
      horseId: 'H17',
      heartRate: 37,
      bodyTemp: 37.2,
      oxygen: 98.6,
      respiration: 17,
      posture: "Berdiri Kepala Tegak",
      postureAccuracy: 97.2,
      batteryPercent: 83,
    ),
    HorseHealthModel(
      healthId: 'HEALTH18',
      horseId: 'H18',
      heartRate: 35,
      bodyTemp: 37.8,
      oxygen: 99.3,
      respiration: 18,
      posture: "Tidur",
      postureAccuracy: 98.2,
      batteryPercent: 92,
    ),
  ].obs;

  final RxList<HalterDeviceModel> halterDeviceList = <HalterDeviceModel>[
    HalterDeviceModel(deviceId: 'SHIPB1223005', horseId: 'H1', status: 'on'),
    HalterDeviceModel(deviceId: 'SHIPB1223006', horseId: null, status: 'off'),
    HalterDeviceModel(deviceId: 'SHIPB1223007', horseId: 'H2', status: 'on'),
    HalterDeviceModel(deviceId: 'SHIPB1223008', horseId: 'H3', status: 'off'),
    HalterDeviceModel(deviceId: 'SHIPB1223009', horseId: 'H4', status: 'on'),
    HalterDeviceModel(deviceId: 'SHIPB1223010', horseId: null, status: 'off'),
    HalterDeviceModel(deviceId: 'SHIPB1223011', horseId: 'H5', status: 'on'),
    HalterDeviceModel(deviceId: 'SHIPB1223012', horseId: null, status: 'off'),
    HalterDeviceModel(deviceId: 'SHIPB1223013', horseId: 'H6', status: 'on'),
    HalterDeviceModel(deviceId: 'SHIPB1223014', horseId: 'H7', status: 'off'),
    HalterDeviceModel(deviceId: 'SHIPB1223015', horseId: 'H8', status: 'on'),
    HalterDeviceModel(deviceId: 'SHIPB1223016', horseId: 'H9', status: 'off'),
    HalterDeviceModel(deviceId: 'SHIPB1223017', horseId: 'H10', status: 'on'),
    HalterDeviceModel(deviceId: 'SHIPB1223018', horseId: null, status: 'off'),
    HalterDeviceModel(deviceId: 'SHIPB1223019', horseId: 'H11', status: 'on'),
    HalterDeviceModel(deviceId: 'SHIPB1223020', horseId: 'H12', status: 'off'),
    HalterDeviceModel(deviceId: 'SHIPB1223021', horseId: 'H13', status: 'on'),
    HalterDeviceModel(deviceId: 'SHIPB1223022', horseId: 'H14', status: 'off'),
    HalterDeviceModel(deviceId: 'SHIPB1223023', horseId: 'H15', status: 'on'),
    HalterDeviceModel(deviceId: 'SHIPB1223024', horseId: null, status: 'off'),
  ].obs;

  void setSelectedStableId(String stableId) {
    selectedStableId.value = stableId;
    selectedRoomIndex.value = 0; // reset index ke 0 saat ganti stable
  }

  HorseModel getHorseById(String horseId) {
    return horseList.firstWhere((horse) => horse.horseId == horseId);
  }

  String getStableNameById(String stableId) {
    final stable = stableList.firstWhereOrNull((s) => s.stableId == stableId);
    return stable?.name ?? "Tidak diketahui";
  }

  bool isHalterDeviceActive(String horseId) {
    return halterDeviceList.any(
      (device) => device.horseId == horseId && device.status == 'on',
    );
  }

  bool isCctvActive(String roomId) {
    final room = roomList.firstWhereOrNull((r) => r.roomId == roomId);
    return room?.cctvIds.isNotEmpty ?? false;
  }

  String getHorseNameByRoomId(String roomId) {
    final room = roomList.firstWhereOrNull((r) => r.roomId == roomId);
    return room != null && room.horseId != null
        ? getHorseById(room.horseId!).name
        : "Tidak diketahui";
  }

  bool isRoomFilled(String roomId) {
    final room = roomList.firstWhereOrNull((r) => r.roomId == roomId);
    return room != null && room.horseId != null;
  }
}
